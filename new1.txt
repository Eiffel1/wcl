1.pwd:显示用户当前所处路径
2.ls:显示当前文件夹下的内容
3.rm -rf："要删除的内容”：删除文件或文件夹
4.cd:“要进入的目录":改变路径
5.mkdir:“要创建的文件夹名称”：创建文件夹 
6.git init:"创建版本库（告诉git在那里安家，前提条件：需要cd命令要进入的目录）"
7.git add :文件名将文件添加到仓库
8.git config --global user.name''你的名字"：创建git账号
9git config --global user.email "你的邮箱"创建邮箱账号
10.git ommit -m（“...”message-说明）：将文件提交给仓库
11.git status:检测改之前与仓库版本的文件是否一致
12.git diff 用来显示哪些地方不一样
13.git reset --hard (备注十六进制前6位，git)返回所选版本
14.git log：显示用户所修改的信息git log --pretty=oneline；美化git log的信息)
15.cat filename:显示文件filename内容
16.HEAD指针:HEAD指向那个版本，当前版本就是谁（工作区的版本就是谁）
17:git reflog:展示所有全部操作历史（用来后悔）
18.touch；创建文件
19.vi:进入文件编辑模式（一般模式dd-删除光标在行 x:单个字符 插入模式：按键盘i；命令模式：wq\x保存退出）
20.git 分区；工作区、暂存区、支线库，commit的内容只是暂存区的内容，若工作区未add，那么工作区的改变就不会commit
21.当维护多个不重名的文件时，git的这些所有命令都可以指定文件名
   例如:git diff HEAD --new1.txt;只比较版本库中new.txt和工作区中new.1txt的区别；忽略LECENSE的影响    
22 git checkout --new1.txt :还原仓库中的HEAD（慎用）HEAD在哪还原到哪
23.git reset HEAD --new1.txt：放弃暂停区的内容通过git add添加的内容，）同时把工作区的内容也还原到HEAD状态